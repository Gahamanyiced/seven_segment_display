

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Jul 25 10:03:25 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168                           
   169                           	psect	idataBANK0
   170  0766                     __pidataBANK0:
   171                           
   172                           ;initializer for main@F855
   173  0766  34C0               	retlw	192
   174  0767  34F9               	retlw	249
   175  0768  34A4               	retlw	164
   176  0769  34B0               	retlw	176
   177  076A  3499               	retlw	153
   178  076B  3492               	retlw	146
   179  076C  3482               	retlw	130
   180  076D  34F8               	retlw	248
   181  076E  3480               	retlw	128
   182  076F  3490               	retlw	144
   183  0008                     _PORTD	set	8
   184  0088                     _TRISD	set	136
   185                           
   186                           	psect	cinit
   187  07EE                     start_initialization:	
   188                           ; #config settings
   189                           
   190  07EE                     __initialization:
   191                           
   192                           ; Initialize objects allocated to BANK0
   193  07EE  1383               	bcf	3,7	;select IRP bank0
   194  07EF  3036               	movlw	low (__pdataBANK0+10)
   195  07F0  00FD               	movwf	btemp+-1
   196  07F1  3007               	movlw	high __pidataBANK0
   197  07F2  00FE               	movwf	btemp
   198  07F3  3066               	movlw	low __pidataBANK0
   199  07F4  00FF               	movwf	btemp+1
   200  07F5  302C               	movlw	low __pdataBANK0
   201  07F6  0084               	movwf	4
   202  07F7  120A  118A  2774  120A  118A  	fcall	init_ram0
   203  07FC                     end_of_initialization:	
   204                           ;End of C runtime variable initialization code
   205                           
   206  07FC                     __end_of__initialization:
   207  07FC  0183               	clrf	3
   208  07FD  120A  118A  2FA8   	ljmp	_main	;jump to C main() function
   209                           
   210                           	psect	dataBANK0
   211  002C                     __pdataBANK0:
   212  002C                     main@F855:
   213  002C                     	ds	10
   214                           
   215                           	psect	inittext
   216  0770                     init_fetch0:	
   217                           ;	Called with low address in FSR and high address in W
   218                           
   219  0770  087E               	movf	btemp,w
   220  0771  008A               	movwf	10
   221  0772  087F               	movf	btemp+1,w
   222  0773  0082               	movwf	2
   223  0774                     init_ram0:	
   224                           ;Called with:
   225                           ;	high address of idata address in btemp 
   226                           ;	low address of idata address in btemp+1 
   227                           ;	low address of data in FSR
   228                           ;	high address + 1 of data in btemp-1
   229                           
   230  0774  120A  118A  2770  120A  118A  	fcall	init_fetch0
   231  0779  0080               	movwf	0
   232  077A  0A84               	incf	4,f
   233  077B  0804               	movf	4,w
   234  077C  067D               	xorwf	btemp+-1,w
   235  077D  1903               	btfsc	3,2
   236  077E  3400               	retlw	0
   237  077F  0AFF               	incf	btemp+1,f
   238  0780  1903               	btfsc	3,2
   239  0781  0AFE               	incf	btemp,f
   240  0782  2F74               	goto	init_ram0
   241                           
   242                           	psect	cstackCOMMON
   243  0070                     __pcstackCOMMON:
   244  0070                     ?_DELAY_ms:
   245  0070                     ?_main:	
   246                           ; 1 bytes @ 0x0
   247                           
   248  0070                     DELAY_ms@ms_Count:	
   249                           ; 1 bytes @ 0x0
   250                           
   251                           
   252                           ; 2 bytes @ 0x0
   253  0070                     	ds	2
   254  0072                     ??_DELAY_ms:
   255  0072                     DELAY_ms@i:	
   256                           ; 1 bytes @ 0x2
   257                           
   258                           
   259                           ; 2 bytes @ 0x2
   260  0072                     	ds	2
   261  0074                     DELAY_ms@j:
   262                           
   263                           ; 2 bytes @ 0x4
   264  0074                     	ds	2
   265  0076                     ??_main:
   266                           
   267                           ; 1 bytes @ 0x6
   268  0076                     	ds	4
   269                           
   270                           	psect	cstackBANK0
   271  0020                     __pcstackBANK0:
   272  0020                     main@seg_code:
   273                           
   274                           ; 10 bytes @ 0x0
   275  0020                     	ds	10
   276  002A                     main@i:
   277                           
   278                           ; 2 bytes @ 0xA
   279  002A                     	ds	2
   280                           
   281                           	psect	maintext
   282  07A8                     __pmaintext:	
   283 ;;
   284 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   285 ;;
   286 ;; *************** function _main *****************
   287 ;; Defined at:
   288 ;;		line 20 in file "newmain.c"
   289 ;; Parameters:    Size  Location     Type
   290 ;;		None
   291 ;; Auto vars:     Size  Location     Type
   292 ;;  seg_code       10    0[BANK0 ] unsigned char [10]
   293 ;;  i               2   10[BANK0 ] int 
   294 ;; Return value:  Size  Location     Type
   295 ;;                  1    wreg      void 
   296 ;; Registers used:
   297 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   298 ;; Tracked objects:
   299 ;;		On entry : B00/0
   300 ;;		On exit  : 0/0
   301 ;;		Unchanged: 0/0
   302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   303 ;;      Params:         0       0       0       0       0
   304 ;;      Locals:         0      12       0       0       0
   305 ;;      Temps:          4       0       0       0       0
   306 ;;      Totals:         4      12       0       0       0
   307 ;;Total ram usage:       16 bytes
   308 ;; Hardware stack levels required when called: 1
   309 ;; This function calls:
   310 ;;		_DELAY_ms
   311 ;; This function is called by:
   312 ;;		Startup code after reset
   313 ;; This function uses a non-reentrant model
   314 ;;
   315                           
   316                           
   317                           ;psect for function _main
   318  07A8                     _main:
   319  07A8                     l658:	
   320                           ;incstack = 0
   321                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   322                           
   323                           
   324                           ;newmain.c: 22:     char seg_code[]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90};
   325  07A8  3020               	movlw	main@seg_code& (0+255)
   326  07A9  0084               	movwf	4
   327  07AA  302C               	movlw	low main@F855
   328  07AB  00F6               	movwf	??_main
   329  07AC  0804               	movf	4,w
   330  07AD  00F7               	movwf	??_main+1
   331  07AE  300A               	movlw	10
   332  07AF  00F8               	movwf	??_main+2
   333  07B0                     u70:
   334  07B0  0876               	movf	??_main,w
   335  07B1  0084               	movwf	4
   336  07B2  1383               	bcf	3,7	;select IRP bank0
   337  07B3  0800               	movf	0,w
   338  07B4  00F9               	movwf	??_main+3
   339  07B5  0AF6               	incf	??_main,f
   340  07B6  0877               	movf	??_main+1,w
   341  07B7  0084               	movwf	4
   342  07B8  0879               	movf	??_main+3,w
   343  07B9  0080               	movwf	0
   344  07BA  0AF7               	incf	??_main+1,f
   345  07BB  0BF8               	decfsz	??_main+2,f
   346  07BC  2FB0               	goto	u70
   347  07BD                     l660:
   348                           
   349                           ;newmain.c: 23:     int i;;newmain.c: 26:     TRISD = 0x00;
   350  07BD  1683               	bsf	3,5	;RP0=1, select bank1
   351  07BE  1303               	bcf	3,6	;RP1=0, select bank1
   352  07BF  0188               	clrf	8	;volatile
   353  07C0                     l662:
   354                           
   355                           ;newmain.c: 29:     {;newmain.c: 30:         for (i = 0; i <= 9; i++)
   356  07C0  1283               	bcf	3,5	;RP0=0, select bank0
   357  07C1  1303               	bcf	3,6	;RP1=0, select bank0
   358  07C2  01AA               	clrf	main@i
   359  07C3  01AB               	clrf	main@i+1
   360  07C4                     l668:
   361                           
   362                           ;newmain.c: 31:         {;newmain.c: 32:             PORTD = seg_code[i];
   363  07C4  1283               	bcf	3,5	;RP0=0, select bank0
   364  07C5  1303               	bcf	3,6	;RP1=0, select bank0
   365  07C6  082A               	movf	main@i,w
   366  07C7  3E20               	addlw	(low (main@seg_code| 0))& (0+255)
   367  07C8  0084               	movwf	4
   368  07C9  1383               	bcf	3,7	;select IRP bank0
   369  07CA  0800               	movf	0,w
   370  07CB  0088               	movwf	8	;volatile
   371  07CC                     l670:
   372                           
   373                           ;newmain.c: 33:             DELAY_ms(100);
   374  07CC  3064               	movlw	100
   375  07CD  00F0               	movwf	DELAY_ms@ms_Count
   376  07CE  3000               	movlw	0
   377  07CF  00F1               	movwf	DELAY_ms@ms_Count+1
   378  07D0  120A  118A  2783  120A  118A  	fcall	_DELAY_ms
   379  07D5                     l672:
   380                           
   381                           ;newmain.c: 34:         }
   382  07D5  3001               	movlw	1
   383  07D6  1283               	bcf	3,5	;RP0=0, select bank0
   384  07D7  1303               	bcf	3,6	;RP1=0, select bank0
   385  07D8  07AA               	addwf	main@i,f
   386  07D9  1803               	skipnc
   387  07DA  0AAB               	incf	main@i+1,f
   388  07DB  3000               	movlw	0
   389  07DC  07AB               	addwf	main@i+1,f
   390  07DD                     l674:
   391  07DD  082B               	movf	main@i+1,w
   392  07DE  3A80               	xorlw	128
   393  07DF  00FF               	movwf	btemp+1
   394  07E0  3080               	movlw	128
   395  07E1  027F               	subwf	btemp+1,w
   396  07E2  1D03               	skipz
   397  07E3  2FE6               	goto	u85
   398  07E4  300A               	movlw	10
   399  07E5  022A               	subwf	main@i,w
   400  07E6                     u85:
   401  07E6  1C03               	skipc
   402  07E7  2FE9               	goto	u81
   403  07E8  2FEA               	goto	u80
   404  07E9                     u81:
   405  07E9  2FC4               	goto	l668
   406  07EA                     u80:
   407  07EA  2FC0               	goto	l662
   408  07EB  120A  118A  2800   	ljmp	start
   409  07EE                     __end_of_main:
   410                           
   411                           	psect	text1
   412  0783                     __ptext1:	
   413 ;; *************** function _DELAY_ms *****************
   414 ;; Defined at:
   415 ;;		line 11 in file "newmain.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;  ms_Count        2    0[COMMON] unsigned int 
   418 ;; Auto vars:     Size  Location     Type
   419 ;;  j               2    4[COMMON] unsigned int 
   420 ;;  i               2    2[COMMON] unsigned int 
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		wreg, status,2
   425 ;; Tracked objects:
   426 ;;		On entry : 0/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   430 ;;      Params:         2       0       0       0       0
   431 ;;      Locals:         4       0       0       0       0
   432 ;;      Temps:          0       0       0       0       0
   433 ;;      Totals:         6       0       0       0       0
   434 ;;Total ram usage:        6 bytes
   435 ;; Hardware stack levels used: 1
   436 ;; This function calls:
   437 ;;		Nothing
   438 ;; This function is called by:
   439 ;;		_main
   440 ;; This function uses a non-reentrant model
   441 ;;
   442                           
   443                           
   444                           ;psect for function _DELAY_ms
   445  0783                     _DELAY_ms:
   446  0783                     l646:	
   447                           ;incstack = 0
   448                           ; Regs used in _DELAY_ms: [wreg+status,2]
   449                           
   450                           
   451                           ;newmain.c: 11: void DELAY_ms(unsigned int ms_Count);newmain.c: 12: {;newmain.c: 13:    
      +                           unsigned int i,j;;newmain.c: 14:     for(i=0;i<ms_Count;i++)
   452  0783  01F2               	clrf	DELAY_ms@i
   453  0784  01F3               	clrf	DELAY_ms@i+1
   454  0785  2F9D               	goto	l7
   455  0786                     l648:
   456                           
   457                           ;newmain.c: 15:     {;newmain.c: 16:         for(j=0;j<1000;j++);
   458  0786  01F4               	clrf	DELAY_ms@j
   459  0787  01F5               	clrf	DELAY_ms@j+1
   460  0788                     l654:
   461  0788  3001               	movlw	1
   462  0789  07F4               	addwf	DELAY_ms@j,f
   463  078A  1803               	skipnc
   464  078B  0AF5               	incf	DELAY_ms@j+1,f
   465  078C  3000               	movlw	0
   466  078D  07F5               	addwf	DELAY_ms@j+1,f
   467  078E  3003               	movlw	3
   468  078F  0275               	subwf	DELAY_ms@j+1,w
   469  0790  30E8               	movlw	232
   470  0791  1903               	skipnz
   471  0792  0274               	subwf	DELAY_ms@j,w
   472  0793  1C03               	skipc
   473  0794  2F96               	goto	u51
   474  0795  2F97               	goto	u50
   475  0796                     u51:
   476  0796  2F88               	goto	l654
   477  0797                     u50:
   478  0797                     l656:
   479                           
   480                           ;newmain.c: 17:     }
   481  0797  3001               	movlw	1
   482  0798  07F2               	addwf	DELAY_ms@i,f
   483  0799  1803               	skipnc
   484  079A  0AF3               	incf	DELAY_ms@i+1,f
   485  079B  3000               	movlw	0
   486  079C  07F3               	addwf	DELAY_ms@i+1,f
   487  079D                     l7:
   488  079D  0871               	movf	DELAY_ms@ms_Count+1,w
   489  079E  0273               	subwf	DELAY_ms@i+1,w
   490  079F  1D03               	skipz
   491  07A0  2FA3               	goto	u65
   492  07A1  0870               	movf	DELAY_ms@ms_Count,w
   493  07A2  0272               	subwf	DELAY_ms@i,w
   494  07A3                     u65:
   495  07A3  1C03               	skipc
   496  07A4  2FA6               	goto	u61
   497  07A5  2FA7               	goto	u60
   498  07A6                     u61:
   499  07A6  2F86               	goto	l648
   500  07A7                     u60:
   501  07A7                     l12:
   502  07A7  0008               	return
   503  07A8                     __end_of_DELAY_ms:
   504  007E                     btemp	set	126	;btemp
   505  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     12      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_DELAY_ms

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0     260
                                              6 COMMON     4     4      0
                                              0 BANK0     12    12      0
                           _DELAY_ms
 ---------------------------------------------------------------------------------
 (1) _DELAY_ms                                             6     4      2     168
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DELAY_ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      C      16       5       27.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      20      12        0.0%
ABS                  0      0      20       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Jul 25 10:03:25 2021

                      l7 079D                        pc 0002                       l12 07A7  
                     u50 0797                       u51 0796                       u60 07A7  
                     u61 07A6                       u70 07B0                       u80 07EA  
                     u65 07A3                       u81 07E9                       u85 07E6  
                     fsr 0004                      l660 07BD                      l654 0788  
                    l646 0783                      l670 07CC                      l662 07C0  
                    l656 0797                      l648 0786                      l672 07D5  
                    l674 07DD                      l658 07A8                      l668 07C4  
                    fsr0 0004                      indf 0000                     _main 07A8  
                   btemp 007E                     start 0000         __end_of_DELAY_ms 07A8  
                  ?_main 0070                    _PORTD 0008                    _TRISD 0088  
           main@seg_code 0020                    main@i 002A                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07EE  
           __end_of_main 07EE                   ??_main 0076                DELAY_ms@i 0072  
              DELAY_ms@j 0074         DELAY_ms@ms_Count 0070                ?_DELAY_ms 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 0766  
             ??_DELAY_ms 0072               __pmaintext 07A8                  __ptext1 0783  
   end_of_initialization 07FC        __size_of_DELAY_ms 0025      start_initialization 07EE  
             init_fetch0 0770              __pdataBANK0 002C                ___latbits 0002  
          __pcstackBANK0 0020                 _DELAY_ms 0783            __size_of_main 0046  
               main@F855 002C                 init_ram0 0774  
